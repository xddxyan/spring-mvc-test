<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.0" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">

	<display-name>Web Application</display-name>
	<!-- spring核心配置 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:application-core.xml</param-value>
	</context-param>
	<!-- spring变量配置 -->
	<context-param>
		<param-name>spring.profiles.default</param-name>
		<param-value>production</param-value>
	</context-param>

	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- sitemesh过滤器 组装jsp页面 -->
	<filter>
		<filter-name>sitemeshFilter</filter-name>
		<filter-class>com.opensymphony.sitemesh.webapp.SiteMeshFilter</filter-class>
		<async-supported>true</async-supported><!-- 启用异步 -->
	</filter>
	<filter-mapping>
		<filter-name>sitemeshFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!-- spring过滤器 By using DelegatingFilterProxy, we're able to define our 
		filter as a bean in the application-core.xml instead of adding the filter 
		directly into web.xml. -->
	<filter>
		<filter-name>applicationFilter</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
		<init-param>
			<param-name>targetFilterLifecycle</param-name>
			<param-value>true</param-value>
		</init-param>
		<async-supported>true</async-supported><!-- 启用异步 -->
	</filter>
	<filter-mapping>
		<filter-name>applicationFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- servlet名称 -->
	<servlet>
		<servlet-name>servlet1</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/servlet-context.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
		<async-supported>true</async-supported><!-- 启用异步,注意需要servlet3,所有filter及servlet中本属性设置为true -->
	</servlet>
	<!-- servlet配置 -->
	<session-config>
		<session-timeout>120</session-timeout>
	</session-config>
	<!-- servlet映射 applicationFilter组装url后map到servlet处理-->
	<servlet-mapping>
		<servlet-name>servlet1</servlet-name>
		<url-pattern>/servlet1/*</url-pattern>
	</servlet-mapping>
</web-app>
